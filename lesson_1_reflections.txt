How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    You can focus on only things that changed and get a better overview…

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Looking at the complete history of a file you can do refactoring of your code easier, as you can try things out and go back to an old version if it didn't work out.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: Usually you'll have a working version on every commit
    Cons: It's easy to get dragged away and then the commits are too big and might include lots of merging

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Cause for one change which is commit-worthy there might be several files which had to change…

How can you use the commands git log and git diff to view the history of files?

    git log is there to get a history of all checkins, together with IDs which I can then compare with the git diff command to see what has changed between two versions

How might using version control make you more confident to make changes that
could break something?

    You can always revert back to a working older version or you can compare what changed from the last working version

Now that you have your workspace set up, what do you want to try using Git for?

    Managing my current projects
